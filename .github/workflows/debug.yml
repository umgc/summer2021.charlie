# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Develop Branch Linter, Build, Unit Test

env:
  FLUTTER_VERSION: "debug"

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  linter:
    runs-on: ubuntu-latest
    name: Lint flutter code
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v1

      # Add formating standards
      #- run: flutter pub add --dev effective_dart
      - run: flutter pub get

      # Analyze
      - name: Analyze Flutter
        uses: ValentinVignal/action-dart-analyze@v0.11
        with:
          fail-on: "analyze"

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        type: [Android, iOS]
        output: [apk, ipa]

    name: Build ${{ matrix.type }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
      - run: flutter pub get

      - name: Build ${{ matrix.type }}
        run: flutter build ${{ matrix.output }} --dart-define=GOOGLE_SERVICE_ACCOUNT_BASE64=${{secrets.GOOGLE_SERVICE_ACCOUNT_BASE64}}

      # Upload Build Artifacts for download
      - name: 'Upload ${{ matrix.type }} Artifact'
        uses: 'actions/upload-artifact@v2'
        with:
          name: mnemosyne-${{ matrix.type }}-${{env.FLUTTER_VERSION}}
          path: build/app/outputs/*
          
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
      - run: flutter pub get

      - name: Run tests
        run: flutter test
